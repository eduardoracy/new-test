"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_src_lib_firebaseClient_ts";
exports.ids = ["_ssr_src_lib_firebaseClient_ts"];
exports.modules = {

/***/ "(ssr)/./src/lib/firebaseClient.ts":
/*!***********************************!*\
  !*** ./src/lib/firebaseClient.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   app: () => (/* binding */ app),\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   completeMagicLink: () => (/* binding */ completeMagicLink),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   sendMagicLink: () => (/* binding */ sendMagicLink),\n/* harmony export */   signInWithGoogle: () => (/* binding */ signInWithGoogle)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"(ssr)/./node_modules/firebase/app/dist/index.mjs\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/auth */ \"(ssr)/./node_modules/firebase/auth/dist/index.mjs\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"(ssr)/./node_modules/firebase/firestore/dist/index.mjs\");\n\n\n\nconst cfg = {\n    apiKey: \"AIzaSyBVCUuKFF67JLiBFb2xw56eBxmRDYeQyF4\",\n    authDomain: \"hmb-vtc.firebaseapp.com\",\n    projectId: \"hmb-vtc\",\n    appId: \"1:748227134098:web:79c06a3eec93894e38dc4b\",\n    // Add other optional config values as needed\n    storageBucket: \"hmb-vtc.appspot.com\",\n    messagingSenderId: \"748227134098\",\n    measurementId: \"G-0GNMZ1XXNL\"\n};\nconst required = [\n    \"NEXT_PUBLIC_FIREBASE_API_KEY\",\n    \"NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN\",\n    \"NEXT_PUBLIC_FIREBASE_PROJECT_ID\",\n    \"NEXT_PUBLIC_FIREBASE_APP_ID\"\n];\nconst missing = required.filter((k)=>!process.env[k]);\nif (missing.length) {\n    throw new Error(`Missing Firebase env vars: ${missing.join(\", \")}. Put them in web/.env.local (copy from Firebase Web App config).`);\n}\nconst app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length > 0 ? (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApp)() : (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)({\n    apiKey: cfg.apiKey,\n    authDomain: cfg.authDomain,\n    projectId: cfg.projectId,\n    storageBucket: cfg.storageBucket,\n    messagingSenderId: cfg.messagingSenderId,\n    appId: cfg.appId,\n    measurementId: cfg.measurementId\n});\nconst auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.getAuth)(app);\nconst db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getFirestore)(app);\nfunction signInWithGoogle() {\n    return (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signInWithPopup)(auth, new firebase_auth__WEBPACK_IMPORTED_MODULE_1__.GoogleAuthProvider());\n}\nasync function sendMagicLink(email) {\n    const actionCodeSettings = {\n        url: window.location.origin + \"/\",\n        handleCodeInApp: true\n    };\n    await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.sendSignInLinkToEmail)(auth, email, actionCodeSettings);\n    window.localStorage.setItem(\"emailForSignIn\", email);\n}\nasync function completeMagicLink() {\n    // Only proceed if it's really a magic-sign-in URL\n    if (!(0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.isSignInWithEmailLink)(auth, window.location.href)) return;\n    let email = window.localStorage.getItem(\"emailForSignIn\");\n    if (!email) {\n        email = window.prompt(\"Please provide your email for confirmation\") || \"\";\n    }\n    if (!email) return;\n    await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signInWithEmailLink)(auth, email, window.location.href);\n    window.localStorage.removeItem(\"emailForSignIn\");\n    // Optional: clean the URL so refreshes donâ€™t re-trigger\n    const url = new URL(window.location.href);\n    [\n        \"oobCode\",\n        \"mode\",\n        \"apiKey\",\n        \"lang\",\n        \"continueUrl\"\n    ].forEach((k)=>url.searchParams.delete(k));\n    window.history.replaceState({}, \"\", url.toString());\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvbGliL2ZpcmViYXNlQ2xpZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE4RDtBQVF2QztBQUMyQjtBQUVsRCxNQUFNVSxNQUFNO0lBQ1JDLFFBQVE7SUFDUkMsWUFBWTtJQUNaQyxXQUFXO0lBQ1hDLE9BQU87SUFDUCw2Q0FBNkM7SUFDN0NDLGVBQWVDLHFCQUErQztJQUM5REcsbUJBQW1CSCxjQUFvRDtJQUN2RUssZUFBZUwsY0FBK0M7QUFDbEU7QUFFQSxNQUFNTyxXQUFXO0lBQ2I7SUFDQTtJQUNBO0lBQ0E7Q0FDSDtBQUVELE1BQU1DLFVBQVVELFNBQVNFLE1BQU0sQ0FBQyxDQUFDQyxJQUFNLENBQUNWLFFBQVFDLEdBQUcsQ0FBQ1MsRUFBRTtBQUN0RCxJQUFJRixRQUFRRyxNQUFNLEVBQUU7SUFDaEIsTUFBTSxJQUFJQyxNQUNOLENBQUMsMkJBQTJCLEVBQUVKLFFBQVFLLElBQUksQ0FDdEMsTUFDRixpRUFBaUUsQ0FBQztBQUU1RTtBQUVPLE1BQU1DLE1BQ1Q3QixxREFBT0EsR0FBRzBCLE1BQU0sR0FBRyxJQUNiekIsb0RBQU1BLEtBQ05GLDJEQUFhQSxDQUFDO0lBQ1pXLFFBQVFELElBQUlDLE1BQU07SUFDbEJDLFlBQVlGLElBQUlFLFVBQVU7SUFDMUJDLFdBQVdILElBQUlHLFNBQVM7SUFDeEJFLGVBQWVMLElBQUlLLGFBQWE7SUFDaENJLG1CQUFtQlQsSUFBSVMsaUJBQWlCO0lBQ3hDTCxPQUFPSixJQUFJSSxLQUFLO0lBQ2hCTyxlQUFlWCxJQUFJVyxhQUFhO0FBQ3BDLEdBQUc7QUFFSixNQUFNVSxPQUFPNUIsc0RBQU9BLENBQUMyQixLQUFLO0FBQzFCLE1BQU1FLEtBQUt2QixnRUFBWUEsQ0FBQ3FCLEtBQUs7QUFFN0IsU0FBU0c7SUFDWixPQUFPekIsOERBQWVBLENBQUN1QixNQUFNLElBQUkzQiw2REFBa0JBO0FBQ3ZEO0FBRU8sZUFBZThCLGNBQWNDLEtBQWE7SUFDN0MsTUFBTUMscUJBQXFCO1FBQ3ZCQyxLQUFLQyxPQUFPQyxRQUFRLENBQUNDLE1BQU0sR0FBRztRQUM5QkMsaUJBQWlCO0lBQ3JCO0lBQ0EsTUFBTXBDLG9FQUFxQkEsQ0FBQzBCLE1BQU1JLE9BQU9DO0lBQ3pDRSxPQUFPSSxZQUFZLENBQUNDLE9BQU8sQ0FBQyxrQkFBa0JSO0FBQ2xEO0FBRU8sZUFBZVM7SUFDbEIsa0RBQWtEO0lBQ2xELElBQUksQ0FBQ3RDLG9FQUFxQkEsQ0FBQ3lCLE1BQU1PLE9BQU9DLFFBQVEsQ0FBQ00sSUFBSSxHQUFHO0lBRXhELElBQUlWLFFBQVFHLE9BQU9JLFlBQVksQ0FBQ0ksT0FBTyxDQUFDO0lBQ3hDLElBQUksQ0FBQ1gsT0FBTztRQUNSQSxRQUFRRyxPQUFPUyxNQUFNLENBQUMsaURBQWlEO0lBQzNFO0lBQ0EsSUFBSSxDQUFDWixPQUFPO0lBRVosTUFBTTVCLGtFQUFtQkEsQ0FBQ3dCLE1BQU1JLE9BQU9HLE9BQU9DLFFBQVEsQ0FBQ00sSUFBSTtJQUMzRFAsT0FBT0ksWUFBWSxDQUFDTSxVQUFVLENBQUM7SUFDL0Isd0RBQXdEO0lBQ3hELE1BQU1YLE1BQU0sSUFBSVksSUFBSVgsT0FBT0MsUUFBUSxDQUFDTSxJQUFJO0lBQ3hDO1FBQUM7UUFBVztRQUFRO1FBQVU7UUFBUTtLQUFjLENBQUNLLE9BQU8sQ0FBQyxDQUFDeEIsSUFDMURXLElBQUljLFlBQVksQ0FBQ0MsTUFBTSxDQUFDMUI7SUFFNUJZLE9BQU9lLE9BQU8sQ0FBQ0MsWUFBWSxDQUFDLENBQUMsR0FBRyxJQUFJakIsSUFBSWtCLFFBQVE7QUFDcEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9obWItdnRjLXdlYi8uL3NyYy9saWIvZmlyZWJhc2VDbGllbnQudHM/OTllZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbml0aWFsaXplQXBwLCBnZXRBcHBzLCBnZXRBcHAgfSBmcm9tIFwiZmlyZWJhc2UvYXBwXCI7XG5pbXBvcnQge1xuICAgIGdldEF1dGgsXG4gICAgR29vZ2xlQXV0aFByb3ZpZGVyLFxuICAgIHNlbmRTaWduSW5MaW5rVG9FbWFpbCxcbiAgICBpc1NpZ25JbldpdGhFbWFpbExpbmssXG4gICAgc2lnbkluV2l0aEVtYWlsTGluayxcbiAgICBzaWduSW5XaXRoUG9wdXAsXG59IGZyb20gXCJmaXJlYmFzZS9hdXRoXCI7XG5pbXBvcnQgeyBnZXRGaXJlc3RvcmUgfSBmcm9tIFwiZmlyZWJhc2UvZmlyZXN0b3JlXCI7XG5cbmNvbnN0IGNmZyA9IHtcbiAgICBhcGlLZXk6IFwiQUl6YVN5QlZDVXVLRkY2N0pMaUJGYjJ4dzU2ZUJ4bVJEWWVReUY0XCIsXG4gICAgYXV0aERvbWFpbjogXCJobWItdnRjLmZpcmViYXNlYXBwLmNvbVwiLFxuICAgIHByb2plY3RJZDogXCJobWItdnRjXCIsXG4gICAgYXBwSWQ6IFwiMTo3NDgyMjcxMzQwOTg6d2ViOjc5YzA2YTNlZWM5Mzg5NGUzOGRjNGJcIixcbiAgICAvLyBBZGQgb3RoZXIgb3B0aW9uYWwgY29uZmlnIHZhbHVlcyBhcyBuZWVkZWRcbiAgICBzdG9yYWdlQnVja2V0OiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9TVE9SQUdFX0JVQ0tFVCxcbiAgICBtZXNzYWdpbmdTZW5kZXJJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfTUVTU0FHSU5HX1NFTkRFUl9JRCxcbiAgICBtZWFzdXJlbWVudElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9NRUFTVVJFTUVOVF9JRCxcbn0gYXMgY29uc3Q7XG5cbmNvbnN0IHJlcXVpcmVkID0gW1xuICAgIFwiTkVYVF9QVUJMSUNfRklSRUJBU0VfQVBJX0tFWVwiLFxuICAgIFwiTkVYVF9QVUJMSUNfRklSRUJBU0VfQVVUSF9ET01BSU5cIixcbiAgICBcIk5FWFRfUFVCTElDX0ZJUkVCQVNFX1BST0pFQ1RfSURcIixcbiAgICBcIk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQUF9JRFwiLFxuXSBhcyBjb25zdDtcblxuY29uc3QgbWlzc2luZyA9IHJlcXVpcmVkLmZpbHRlcigoaykgPT4gIXByb2Nlc3MuZW52W2tdKTtcbmlmIChtaXNzaW5nLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYE1pc3NpbmcgRmlyZWJhc2UgZW52IHZhcnM6ICR7bWlzc2luZy5qb2luKFxuICAgICAgICAgICAgXCIsIFwiXG4gICAgICAgICl9LiBQdXQgdGhlbSBpbiB3ZWIvLmVudi5sb2NhbCAoY29weSBmcm9tIEZpcmViYXNlIFdlYiBBcHAgY29uZmlnKS5gXG4gICAgKTtcbn1cblxuZXhwb3J0IGNvbnN0IGFwcCA9XG4gICAgZ2V0QXBwcygpLmxlbmd0aCA+IDBcbiAgICAgICAgPyBnZXRBcHAoKVxuICAgICAgICA6IGluaXRpYWxpemVBcHAoe1xuICAgICAgICAgICAgYXBpS2V5OiBjZmcuYXBpS2V5ISxcbiAgICAgICAgICAgIGF1dGhEb21haW46IGNmZy5hdXRoRG9tYWluISxcbiAgICAgICAgICAgIHByb2plY3RJZDogY2ZnLnByb2plY3RJZCEsXG4gICAgICAgICAgICBzdG9yYWdlQnVja2V0OiBjZmcuc3RvcmFnZUJ1Y2tldCwgLy8gb3B0aW9uYWxcbiAgICAgICAgICAgIG1lc3NhZ2luZ1NlbmRlcklkOiBjZmcubWVzc2FnaW5nU2VuZGVySWQsIC8vIG9wdGlvbmFsXG4gICAgICAgICAgICBhcHBJZDogY2ZnLmFwcElkISxcbiAgICAgICAgICAgIG1lYXN1cmVtZW50SWQ6IGNmZy5tZWFzdXJlbWVudElkLCAvLyBvcHRpb25hbFxuICAgICAgICB9KTtcblxuZXhwb3J0IGNvbnN0IGF1dGggPSBnZXRBdXRoKGFwcCk7XG5leHBvcnQgY29uc3QgZGIgPSBnZXRGaXJlc3RvcmUoYXBwKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHNpZ25JbldpdGhHb29nbGUoKSB7XG4gICAgcmV0dXJuIHNpZ25JbldpdGhQb3B1cChhdXRoLCBuZXcgR29vZ2xlQXV0aFByb3ZpZGVyKCkpO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2VuZE1hZ2ljTGluayhlbWFpbDogc3RyaW5nKSB7XG4gICAgY29uc3QgYWN0aW9uQ29kZVNldHRpbmdzID0ge1xuICAgICAgICB1cmw6IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyBcIi9cIixcbiAgICAgICAgaGFuZGxlQ29kZUluQXBwOiB0cnVlLFxuICAgIH07XG4gICAgYXdhaXQgc2VuZFNpZ25JbkxpbmtUb0VtYWlsKGF1dGgsIGVtYWlsLCBhY3Rpb25Db2RlU2V0dGluZ3MpO1xuICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImVtYWlsRm9yU2lnbkluXCIsIGVtYWlsKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbXBsZXRlTWFnaWNMaW5rKCkge1xuICAgIC8vIE9ubHkgcHJvY2VlZCBpZiBpdCdzIHJlYWxseSBhIG1hZ2ljLXNpZ24taW4gVVJMXG4gICAgaWYgKCFpc1NpZ25JbldpdGhFbWFpbExpbmsoYXV0aCwgd2luZG93LmxvY2F0aW9uLmhyZWYpKSByZXR1cm47XG5cbiAgICBsZXQgZW1haWwgPSB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJlbWFpbEZvclNpZ25JblwiKTtcbiAgICBpZiAoIWVtYWlsKSB7XG4gICAgICAgIGVtYWlsID0gd2luZG93LnByb21wdChcIlBsZWFzZSBwcm92aWRlIHlvdXIgZW1haWwgZm9yIGNvbmZpcm1hdGlvblwiKSB8fCBcIlwiO1xuICAgIH1cbiAgICBpZiAoIWVtYWlsKSByZXR1cm47XG5cbiAgICBhd2FpdCBzaWduSW5XaXRoRW1haWxMaW5rKGF1dGgsIGVtYWlsLCB3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwiZW1haWxGb3JTaWduSW5cIik7XG4gICAgLy8gT3B0aW9uYWw6IGNsZWFuIHRoZSBVUkwgc28gcmVmcmVzaGVzIGRvbuKAmXQgcmUtdHJpZ2dlclxuICAgIGNvbnN0IHVybCA9IG5ldyBVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpO1xuICAgIFtcIm9vYkNvZGVcIiwgXCJtb2RlXCIsIFwiYXBpS2V5XCIsIFwibGFuZ1wiLCBcImNvbnRpbnVlVXJsXCJdLmZvckVhY2goKGspID0+XG4gICAgICAgIHVybC5zZWFyY2hQYXJhbXMuZGVsZXRlKGspXG4gICAgKTtcbiAgICB3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUoe30sIFwiXCIsIHVybC50b1N0cmluZygpKTtcbn1cbiJdLCJuYW1lcyI6WyJpbml0aWFsaXplQXBwIiwiZ2V0QXBwcyIsImdldEFwcCIsImdldEF1dGgiLCJHb29nbGVBdXRoUHJvdmlkZXIiLCJzZW5kU2lnbkluTGlua1RvRW1haWwiLCJpc1NpZ25JbldpdGhFbWFpbExpbmsiLCJzaWduSW5XaXRoRW1haWxMaW5rIiwic2lnbkluV2l0aFBvcHVwIiwiZ2V0RmlyZXN0b3JlIiwiY2ZnIiwiYXBpS2V5IiwiYXV0aERvbWFpbiIsInByb2plY3RJZCIsImFwcElkIiwic3RvcmFnZUJ1Y2tldCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9TVE9SQUdFX0JVQ0tFVCIsIm1lc3NhZ2luZ1NlbmRlcklkIiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfTUVTU0FHSU5HX1NFTkRFUl9JRCIsIm1lYXN1cmVtZW50SWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9NRUFTVVJFTUVOVF9JRCIsInJlcXVpcmVkIiwibWlzc2luZyIsImZpbHRlciIsImsiLCJsZW5ndGgiLCJFcnJvciIsImpvaW4iLCJhcHAiLCJhdXRoIiwiZGIiLCJzaWduSW5XaXRoR29vZ2xlIiwic2VuZE1hZ2ljTGluayIsImVtYWlsIiwiYWN0aW9uQ29kZVNldHRpbmdzIiwidXJsIiwid2luZG93IiwibG9jYXRpb24iLCJvcmlnaW4iLCJoYW5kbGVDb2RlSW5BcHAiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiY29tcGxldGVNYWdpY0xpbmsiLCJocmVmIiwiZ2V0SXRlbSIsInByb21wdCIsInJlbW92ZUl0ZW0iLCJVUkwiLCJmb3JFYWNoIiwic2VhcmNoUGFyYW1zIiwiZGVsZXRlIiwiaGlzdG9yeSIsInJlcGxhY2VTdGF0ZSIsInRvU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/firebaseClient.ts\n");

/***/ })

};
;